Traceback (most recent call last):
  [bt] (8) 9   libtvm.dylib                        0x0000000110bc9157 tvm::transform::Pass::operator()(tvm::IRModule) const + 183
  [bt] (7) 8   libtvm.dylib                        0x0000000110bd5b7c tvm::transform::PassNode::operator()(tvm::IRModule) const + 60
  [bt] (6) 7   libtvm.dylib                        0x0000000110cd12fc tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const + 588
  [bt] (5) 6   libtvm.dylib                        0x0000000110cd1792 tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const + 194
  [bt] (4) 5   libtvm.dylib                        0x0000000110ccff25 tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const + 789
  [bt] (3) 4   libtvm.dylib                        0x0000000111710381 std::__1::__function::__func<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::InferType()::$_1>(tvm::relay::transform::InferType()::$_1)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*), std::__1::allocator<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::InferType()::$_1>(tvm::relay::transform::InferType()::$_1)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)>, void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)>::operator()(tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) + 1905
  [bt] (2) 3   libtvm.dylib                        0x000000011170279c tvm::relay::TypeInferencer::Infer(tvm::GlobalVar, tvm::relay::Function) + 140
  [bt] (1) 2   libtvm.dylib                        0x00000001115992fa tvm::relay::TypeSolver::Solve() + 1530
  [bt] (0) 1   libtvm.dylib                        0x0000000110a62c6f dmlc::LogMessageFatal::~LogMessageFatal() + 111
  [bt] (8) 9   libtvm.dylib                        0x0000000110cd1792 tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const + 194
  [bt] (7) 8   libtvm.dylib                        0x0000000110ccff25 tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const + 789
  [bt] (6) 7   libtvm.dylib                        0x0000000111710381 std::__1::__function::__func<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::InferType()::$_1>(tvm::relay::transform::InferType()::$_1)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*), std::__1::allocator<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::InferType()::$_1>(tvm::relay::transform::InferType()::$_1)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)>, void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)>::operator()(tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) + 1905
  [bt] (5) 6   libtvm.dylib                        0x000000011170279c tvm::relay::TypeInferencer::Infer(tvm::GlobalVar, tvm::relay::Function) + 140
  [bt] (4) 5   libtvm.dylib                        0x000000011159913e tvm::relay::TypeSolver::Solve() + 1086
  [bt] (3) 4   libtvm.dylib                        0x000000011159960c tvm::TypedEnvFunc<bool (tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&)>::operator()(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&) const + 332
  [bt] (2) 3   libtvm.dylib                        0x0000000110d1bd13 void tvm::runtime::TypedPackedFunc<bool (tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&)>::AssignTypedLambda<bool (*)(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&)>(bool (*)(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&))::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const + 691
  [bt] (1) 2   libtvm.dylib                        0x00000001113dd6f2 bool tvm::relay::Pool3DRel<tvm::relay::AvgPool3DAttrs>(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&) + 1458
  [bt] (0) 1   libtvm.dylib                        0x0000000110a62c6f dmlc::LogMessageFatal::~LogMessageFatal() + 111
  File "/Users//Documents/tvm/src/relay/analysis/type_solver.cc", line 622
TVMError: 
---------------------------------------------------------------
An internal invariant was violated during the execution of TVM.
Please read TVM's error reporting guidelines.
More details can be found here: https://discuss.tvm.ai/t/error-reporting/7793.
---------------------------------------------------------------
  Check failed: false == false: [15:58:36] /Users//Documents/tvm/src/relay/op/nn/pooling.cc:999: 
---------------------------------------------------------------
An internal invariant was violated during the execution of TVM.
Please read TVM's error reporting guidelines.
More details can be found here: https://discuss.tvm.ai/t/error-reporting/7793.
---------------------------------------------------------------
  Check failed: layout.Contains(LayoutAxis::Get('D')) && layout.Contains(LayoutAxis::Get('H')) && layout.Contains(LayoutAxis::Get('W')) && !layout.Contains(LayoutAxis::Get('d')) && !layout.Contains(LayoutAxis::Get('h')) && !layout.Contains(LayoutAxis::Get('w')) == false: Invalid layout NCHW. Pool3D layout must have D, H and W, which cannot be split

